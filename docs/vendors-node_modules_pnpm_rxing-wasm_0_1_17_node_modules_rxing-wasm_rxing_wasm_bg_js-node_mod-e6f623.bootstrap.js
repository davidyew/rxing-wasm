"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrxing_web"] = self["webpackChunkrxing_web"] || []).push([["vendors-node_modules_pnpm_rxing-wasm_0_1_17_node_modules_rxing-wasm_rxing_wasm_bg_js-node_mod-e6f623"],{

/***/ "./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.js ***!
  \***************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BarcodeFormat\": () => (/* binding */ BarcodeFormat),\n/* harmony export */   \"BarcodeResult\": () => (/* binding */ BarcodeResult),\n/* harmony export */   \"DecodeHintDictionary\": () => (/* binding */ DecodeHintDictionary),\n/* harmony export */   \"DecodeHintTypes\": () => (/* binding */ DecodeHintTypes),\n/* harmony export */   \"__wbg_getTime_cb82adb2556ed13e\": () => (/* binding */ __wbg_getTime_cb82adb2556ed13e),\n/* harmony export */   \"__wbg_new0_a57059d72c5b7aee\": () => (/* binding */ __wbg_new0_a57059d72c5b7aee),\n/* harmony export */   \"__wbg_new_268f7b7dd3430798\": () => (/* binding */ __wbg_new_268f7b7dd3430798),\n/* harmony export */   \"__wbg_set_933729cf5b66ac11\": () => (/* binding */ __wbg_set_933729cf5b66ac11),\n/* harmony export */   \"__wbindgen_object_drop_ref\": () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   \"__wbindgen_string_new\": () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw),\n/* harmony export */   \"convert_js_image_to_luma\": () => (/* binding */ convert_js_image_to_luma),\n/* harmony export */   \"decode_barcode\": () => (/* binding */ decode_barcode),\n/* harmony export */   \"decode_barcode_rgb\": () => (/* binding */ decode_barcode_rgb),\n/* harmony export */   \"decode_barcode_with_hints\": () => (/* binding */ decode_barcode_with_hints),\n/* harmony export */   \"encode_barcode\": () => (/* binding */ encode_barcode)\n/* harmony export */ });\n/* harmony import */ var _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rxing_wasm_bg.wasm */ \"./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.wasm\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__]);\n_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat32Memory0 = new Float32Array();\n\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* Encode a barcode with the given data, dimensions, and type\n* @param {string} data\n* @param {number} width\n* @param {number} height\n* @param {number} bc_type\n* @returns {string}\n*/\nfunction encode_barcode(data, width, height, bc_type) {\n    try {\n        const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(data, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.encode_barcode(retptr, ptr0, len0, width, height, bc_type);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr1 = r0;\n        var len1 = r1;\n        if (r3) {\n            ptr1 = 0; len1 = 0;\n            throw takeObject(r2);\n        }\n        return getStringFromWasm0(ptr1, len1);\n    } finally {\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(ptr1, len1);\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* Decode a barcode from an array of 8bit luma data\n* @param {Uint8Array} data\n* @param {number} width\n* @param {number} height\n* @param {boolean | undefined} try_harder\n* @returns {BarcodeResult}\n*/\nfunction decode_barcode(data, width, height, try_harder) {\n    try {\n        const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decode_barcode(retptr, ptr0, len0, width, height, isLikeNone(try_harder) ? 0xFFFFFF : try_harder ? 1 : 0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return BarcodeResult.__wrap(r0);\n    } finally {\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Convert a javascript image context's data into luma 8.\n*\n* Data for this function can be found from any canvas object\n* using the `data` property of an `ImageData` object.\n* Such an object could be obtained using the `getImageData`\n* method of a `CanvasRenderingContext2D` object.\n* @param {Uint8Array} data\n* @returns {Uint8Array}\n*/\nfunction convert_js_image_to_luma(data) {\n    try {\n        const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.convert_js_image_to_luma(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nlet cachedUint32Memory0 = new Uint32Array();\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(_rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* Decode a barcode from an array of rgba data.\n* Pixel data is in the form of:\n*     Each pixel is one u32, [r,g,b].\n* @param {Uint32Array} data\n* @param {number} width\n* @param {number} height\n* @param {boolean | undefined} try_harder\n* @returns {BarcodeResult}\n*/\nfunction decode_barcode_rgb(data, width, height, try_harder) {\n    try {\n        const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray32ToWasm0(data, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decode_barcode_rgb(retptr, ptr0, len0, width, height, isLikeNone(try_harder) ? 0xFFFFFF : try_harder ? 1 : 0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return BarcodeResult.__wrap(r0);\n    } finally {\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {Uint8Array} data\n* @param {number} width\n* @param {number} height\n* @param {DecodeHintDictionary} hints\n* @returns {BarcodeResult}\n*/\nfunction decode_barcode_with_hints(data, width, height, hints) {\n    try {\n        const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _assertClass(hints, DecodeHintDictionary);\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decode_barcode_with_hints(retptr, ptr0, len0, width, height, hints.ptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return BarcodeResult.__wrap(r0);\n    } finally {\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* Available barcode types\n*/\nconst BarcodeFormat = Object.freeze({\n/**\n* Aztec 2D barcode format.\n*/\nAZTEC:0,\"0\":\"AZTEC\",\n/**\n* CODABAR 1D format.\n*/\nCODABAR:1,\"1\":\"CODABAR\",\n/**\n* Code 39 1D format.\n*/\nCode39:2,\"2\":\"Code39\",\n/**\n* Code 93 1D format.\n*/\nCode93:3,\"3\":\"Code93\",\n/**\n* Code 128 1D format.\n*/\nCode128:4,\"4\":\"Code128\",\n/**\n* Data Matrix 2D barcode format.\n*/\nDataMatrix:5,\"5\":\"DataMatrix\",\n/**\n* EAN-8 1D format.\n*/\nEan8:6,\"6\":\"Ean8\",\n/**\n* EAN-13 1D format.\n*/\nEan13:7,\"7\":\"Ean13\",\n/**\n* ITF (Interleaved Two of Five) 1D format.\n*/\nITF:8,\"8\":\"ITF\",\n/**\n* MaxiCode 2D barcode format.\n*/\nMAXICODE:9,\"9\":\"MAXICODE\",\n/**\n* PDF417 format.\n*/\nPdf417:10,\"10\":\"Pdf417\",\n/**\n* QR Code 2D barcode format.\n*/\nQrCode:11,\"11\":\"QrCode\",\n/**\n* RSS 14\n*/\nRss14:12,\"12\":\"Rss14\",\n/**\n* RSS EXPANDED\n*/\nRssExpanded:13,\"13\":\"RssExpanded\",\n/**\n* UPC-A 1D format.\n*/\nUpcA:14,\"14\":\"UpcA\",\n/**\n* UPC-E 1D format.\n*/\nUpcE:15,\"15\":\"UpcE\",\n/**\n* UPC/EAN extension format. Not a stand-alone format.\n*/\nUpcEanExtension:16,\"16\":\"UpcEanExtension\",UnsuportedFormat:17,\"17\":\"UnsuportedFormat\", });\n/**\n*/\nconst DecodeHintTypes = Object.freeze({\n/**\n*\n*     * Unspecified, application-specific hint. Maps to an unspecified {@link Object}.\n*\n*/\nOther:0,\"0\":\"Other\",\n/**\n*\n*     * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;\n*     * use {@link Boolean#TRUE}.\n*\n*/\nPureBarcode:1,\"1\":\"PureBarcode\",\n/**\n*\n*     * Image is known to be of one of a few possible formats.\n*     * Maps to a {@link List} of {@link BarcodeFormat}s.\n*\n*/\nPossibleFormats:2,\"2\":\"PossibleFormats\",\n/**\n*\n*     * Spend more time to try to find a barcode; optimize for accuracy, not speed.\n*     * Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n*\n*/\nTryHarder:3,\"3\":\"TryHarder\",\n/**\n*\n*     * Specifies what character encoding to use when decoding, where applicable (type String)\n*\n*/\nCharacterSet:4,\"4\":\"CharacterSet\",\n/**\n*\n*     * Allowed lengths of encoded data -- reject anything else. Maps to an {@code int[]}.\n*\n*/\nAllowedLengths:5,\"5\":\"AllowedLengths\",\n/**\n*\n*     * Assume Code 39 codes employ a check digit. Doesn't matter what it maps to;\n*     * use {@link Boolean#TRUE}.\n*\n*/\nAssumeCode39CheckDigit:6,\"6\":\"AssumeCode39CheckDigit\",\n/**\n*\n*     * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.\n*     * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;\n*     * use {@link Boolean#TRUE}.\n*\n*/\nAssumeGs1:7,\"7\":\"AssumeGs1\",\n/**\n*\n*     * If true, return the start and end digits in a Codabar barcode instead of stripping them. They\n*     * are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them\n*     * to not be. Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n*\n*/\nReturnCodabarStartEnd:8,\"8\":\"ReturnCodabarStartEnd\",\n/**\n*\n*     * The caller needs to be notified via callback when a possible {@link RXingResultPoint}\n*     * is found. Maps to a {@link RXingResultPointCallback}.\n*\n*/\nNeedResultPointCallback:9,\"9\":\"NeedResultPointCallback\",\n/**\n*\n*     * Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.\n*     * Maps to an {@code int[]} of the allowed extension lengths, for example [2], [5], or [2, 5].\n*     * If it is optional to have an extension, do not set this hint. If this is set,\n*     * and a UPC or EAN barcode is found but an extension is not, then no result will be returned\n*     * at all.\n*\n*/\nAllowedEanExtensions:10,\"10\":\"AllowedEanExtensions\",\n/**\n*\n*     * If true, also tries to decode as inverted image. All configured decoders are simply called a\n*     * second time with an inverted image. Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n*\n*/\nAlsoInverted:11,\"11\":\"AlsoInverted\", });\n/**\n*/\nclass BarcodeResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BarcodeResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_barcoderesult_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    timestamp() {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_timestamp(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    format() {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_format(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Each pair of f32 values is an (x,y) point\n    * @returns {Float32Array}\n    */\n    result_points() {\n        try {\n            const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_result_points(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF32FromWasm0(r0, r1).slice();\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    num_bits() {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_num_bits(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    raw_bytes() {\n        try {\n            const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_raw_bytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    text() {\n        try {\n            const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_text(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {Map<any, any>}\n    */\n    get_meta_data() {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.barcoderesult_get_meta_data(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nclass DecodeHintDictionary {\n\n    static __wrap(ptr) {\n        const obj = Object.create(DecodeHintDictionary.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_decodehintdictionary_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decodehintdictionary_new();\n        return DecodeHintDictionary.__wrap(ret);\n    }\n    /**\n    * @param {number} hint\n    * @returns {string}\n    */\n    get_hint(hint) {\n        try {\n            const retptr = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decodehintdictionary_get_hint(retptr, this.ptr, hint);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n            _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {number} hint\n    * @param {string} value\n    * @returns {boolean}\n    */\n    set_hint(hint, value) {\n        const ptr0 = passStringToWasm0(value, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decodehintdictionary_set_hint(this.ptr, hint, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} hint\n    * @returns {boolean}\n    */\n    remove_hint(hint) {\n        const ret = _rxing_wasm_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.decodehintdictionary_remove_hint(this.ptr, hint);\n        return ret !== 0;\n    }\n}\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbg_new_268f7b7dd3430798() {\n    const ret = new Map();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_set_933729cf5b66ac11(arg0, arg1, arg2) {\n    const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nfunction __wbg_getTime_cb82adb2556ed13e(arg0) {\n    const ret = getObject(arg0).getTime();\n    return ret;\n};\n\nfunction __wbg_new0_a57059d72c5b7aee() {\n    const ret = new Date();\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://rxing-web/./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.js?");

/***/ }),

/***/ "./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.wasm":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.wasm ***!
  \*****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __webpack_instantiate__ = ([WEBPACK_IMPORTED_MODULE_0]) => {\n\treturn __webpack_require__.v(exports, module.id, \"3c1bc71e4e5d335a39e2\", {\n\t\t\"./rxing_wasm_bg.js\": {\n\t\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbg_new_268f7b7dd3430798\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_268f7b7dd3430798,\n\t\t\t\"__wbg_set_933729cf5b66ac11\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_933729cf5b66ac11,\n\t\t\t\"__wbg_getTime_cb82adb2556ed13e\": WEBPACK_IMPORTED_MODULE_0.__wbg_getTime_cb82adb2556ed13e,\n\t\t\t\"__wbg_new0_a57059d72c5b7aee\": WEBPACK_IMPORTED_MODULE_0.__wbg_new0_a57059d72c5b7aee,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw\n\t\t}\n\t});\n}\n__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => {\n\ttry {\n\t/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./rxing_wasm_bg.js */ \"./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.js\");\n\tvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([WEBPACK_IMPORTED_MODULE_0]);\n\tvar [WEBPACK_IMPORTED_MODULE_0] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__;\n\tawait __webpack_require__.v(exports, module.id, \"3c1bc71e4e5d335a39e2\", {\n\t\t\"./rxing_wasm_bg.js\": {\n\t\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbg_new_268f7b7dd3430798\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_268f7b7dd3430798,\n\t\t\t\"__wbg_set_933729cf5b66ac11\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_933729cf5b66ac11,\n\t\t\t\"__wbg_getTime_cb82adb2556ed13e\": WEBPACK_IMPORTED_MODULE_0.__wbg_getTime_cb82adb2556ed13e,\n\t\t\t\"__wbg_new0_a57059d72c5b7aee\": WEBPACK_IMPORTED_MODULE_0.__wbg_new0_a57059d72c5b7aee,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw\n\t\t}\n\t});\n\t__webpack_async_result__();\n\t} catch(e) { __webpack_async_result__(e); }\n}, 1);\n\n//# sourceURL=webpack://rxing-web/./node_modules/.pnpm/rxing-wasm@0.1.17/node_modules/rxing-wasm/rxing_wasm_bg.wasm?");

/***/ })

}]);